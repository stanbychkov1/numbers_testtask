version: '3.3'

volumes:
  postgres_data:
  static_volume:

services:
  db:
    restart: always
    image: postgres:12.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: stanbychkov/numbers_testtask:latest
    restart: always
    command: gunicorn numbers_testtask.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/code/staticfiles
    env_file:
      - ./.env

  nginx:
    image: nginx:1.19.6-alpine
    depends_on:
      - web
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/code/staticfiles

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celery:
    restart: always
    build:
      context: .
    command: celery -A numbers_testtask worker -l info --concurrency 1 -P solo
    entrypoint: ["bash", "./wait_for_it.sh"]
    volumes:
      - ./web:/web
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web

  celery_schedule:
    restart: always
    build:
      context: .
    command: celery -A numbers_testtask beat -l INFO
    entrypoint: ["bash", "./wait_for_it.sh"]
    volumes:
      - ./web:/web
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web

  flower:
    restart: always
    build:
      context: .
    command: celery -A numbers_testtask flower
    volumes:
      - ./web:/web
    env_file:
      - ./.env
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - web

  frontend:
    restart: always
    command: npm start
    build:
      context: ./
      dockerfile: ./Dockerfile_frontend
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - web
